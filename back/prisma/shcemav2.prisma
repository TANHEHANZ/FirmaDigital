generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String   @id @default(cuid())
    email         String   @unique
    name          String   @db.VarChar(150)
    ci            String   @unique @db.VarChar(10)
    password      String
    fecha         DateTime @default(now())
    tipo_user     TypeUser
    is_active     String   @default("TRUE")
    is_deleted    String   @default("FALSE")
    isUpdate      String   @default("FALSE")
    idRol         String
    idUnidad      String
    refresh_token String?
    rol           Rol      @relation(fields: [idRol], references: [id])
    unidad        Unidad   @relation(fields: [idUnidad], references: [id])
    Firmar        Firmar[]
    Token         Token[]
}

enum TypeUser {
    Juridica
    Natural
}

model Token {
    id          String   @id @default(cuid())
    modelo      String   @db.VarChar(100)
    serial      String   @unique
    usuario_id  String
    is_active   String   @default("TRUE")
    is_deleted  String   @default("FALSE")
    isUpdate    String   @default("FALSE")
    propietario User     @relation(fields: [usuario_id], references: [id])
    Firmar      Firmar[]
}

model Documento {
    id                 String          @id @default(cuid())
    nombre             String          @db.VarChar(255)
    tipo_documento     String          @db.VarChar(500)
    documento_blob     String          @db.Text
    estado             EstadoDocumento @default(Activo)
    fecha_creacion     DateTime        @default(now())
    fecha_modificacion DateTime?
    fecha_eliminacion  DateTime?
    Firmar             Firmar[]
    is_deleted         String          @default("FALSE")
    isUpdate           String          @default("FALSE")
}

enum EstadoDocumento {
    Activo
    Modificado
    Eliminado
    Remplazado
}

model Firmar {
    id          String    @id @default(cuid())
    fecha       DateTime  @default(now())
    idUser      String
    idDocumento String
    idToken     String
    validado    String    @default("FALSE")
    User        User      @relation(fields: [idUser], references: [id])
    Documento   Documento @relation(fields: [idDocumento], references: [id])
    Token       Token     @relation(fields: [idToken], references: [id])
}

model Rol {
    id         String @id @default(cuid())
    tipo       String @unique @db.VarChar(100)
    is_active  String @default("FALSE")
    is_deleted String @default("FALSE")
    isUpdate   String @default("FALSE")
    User       User[]
}

model Unidad {
    id         String @id @default(cuid())
    unidad     String @unique @db.VarChar(100)
    is_active  String @default("FALSE")
    is_deleted String @default("FALSE")
    isUpdate   String @default("FALSE")
    User       User[]
}
