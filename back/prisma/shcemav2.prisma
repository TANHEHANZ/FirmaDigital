model User {
    id            String   @id @default(cuid())
    email         String   @unique
    name          String   @db.VarChar(150)
    ci            String   @unique @db.VarChar(10)
    password      String
    fecha         DateTime @default(now())
    tipo_user     TypeUser
    is_active     String   @default("FALSE")
    is_deleted    String   @default("FALSE")
    isUpdate      String   @default("FALSE")
    idRol         String
    idUnidad      String
    refresh_token String?
    rol           Rol      @relation(fields: [idRol], references: [id])
    unidad        Unidad   @relation(fields: [idUnidad], references: [id])
    Firmar        Firmar[]
    Token         Token[] // Un usuario puede tener m√∫ltiples tokens (dispositivos)
}

model Token {
    id          String   @id @default(cuid())
    modelo      String   @db.VarChar(100) // Modelo del dispositivo de firma
    serial      String   @unique
    usuario_id  String
    is_active   String   @default("TRUE")
    is_deleted  String   @default("FALSE")
    isUpdate    String   @default("FALSE")
    propietario User     @relation(fields: [usuario_id], references: [id])
    Firmar      Firmar[] // Registro de firmas realizadas con este token
}

model Documento {
    id                 String               @id @default(cuid())
    nombre             String               @db.VarChar(255)
    tipo_documento     String               @db.VarChar(500)
    documento_blob     String               @db.Text
    estado             EstadoDocumento      @default(Activo)
    fecha_creacion     DateTime             @default(now())
    fecha_modificacion DateTime?
    fecha_eliminacion  DateTime?
    Firmar             Firmar[]
    Historial          HistorialDocumento[]
}

enum EstadoDocumento {
    Activo
    Modificado
    Eliminado
    Remplazado
}

model Firmar {
    id          String    @id @default(cuid())
    fecha       DateTime  @default(now())
    idUser      String
    idDocumento String
    idToken     String
    validado    Boolean   @default(false)
    User        User      @relation(fields: [idUser], references: [id])
    Documento   Documento @relation(fields: [idDocumento], references: [id])
    Token       Token     @relation(fields: [idToken], references: [id])
}

model HistorialDocumento {
    id              String          @id @default(cuid())
    idDocumento     String
    accion          AccionDocumento
    fecha           DateTime        @default(now())
    nuevo_documento String? // Si el documento fue reemplazado, referencia al nuevo ID
    Documento       Documento       @relation(fields: [idDocumento], references: [id])
}

enum AccionDocumento {
    Creado
    Modificado
    Firmado
    Eliminado
    Remplazado
}
