generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String   @db.VarChar(150)
  ci            String   @unique @db.VarChar(10)
  password      String
  fecha         DateTime @default(now())
  tipo_user     TypeUser
  is_active     String   @default("FALSE")
  is_deleted    String   @default("FALSE")
  isUpdate      String   @default("FALSE")
  idRol         String
  idUnidad      String
  refresh_token String?
  rol           Rol      @relation(fields: [idRol], references: [id])
  unidad        Unidad   @relation(fields: [idUnidad], references: [id])
  Firmar        Firmar[]
}

enum TypeUser {
  Juridica
  natural
}

model Rol {
  id         String @id @default(cuid())
  tipo       String @unique @db.VarChar(100)
  is_active  String @default("FALSE")
  is_deleted String @default("FALSE")
  isUpdate   String @default("FALSE")
  User       User[]
}

model Unidad {
  id         String @id @default(cuid())
  unidad     String @unique @db.VarChar(100)
  is_active  String @default("FALSE")
  is_deleted String @default("FALSE")
  isUpdate   String @default("FALSE")
  User       User[]
}

model Firmar {
  id          String    @id @default(cuid())
  fecha       DateTime  @default(now())
  idUser      String
  idDocumento String
  idToken     String
  validado    String    @default("FALSE")
  is_active   String    @default("FALSE")
  is_deleted  String    @default("FALSE")
  isUpdate    String    @default("FALSE")
  Token       Token     @relation(fields: [idToken], references: [id])
  User        User      @relation(fields: [idUser], references: [id])
  Documento   Documento @relation(fields: [idDocumento], references: [id])
}

model Documento {
  id             String   @id @default(cuid())
  nombre         String   @unique
  tipo_documento String   @db.VarChar(500)
  documento_blob String   @db.Text
  is_active      String   @default("FALSE")
  is_deleted     String   @default("FALSE")
  isUpdate       String   @default("FALSE")
  Firmar         Firmar[]
}

model Token {
  id                  String      @id @default(cuid())
  tipo                String      @db.VarChar(100)
  id_token_provedor   String
  ci_titual           String      @db.VarChar(10)
  email_titular       String
  descripcion_titular String
  id_certificado      String
  Certificado         Certificado @relation(fields: [id_certificado], references: [id])
  is_active           String      @default("FALSE")
  is_deleted          String      @default("FALSE")
  isUpdate            String      @default("FALSE")
  Firmar              Firmar[]
}

model Certificado {
  id               String   @id @default(cuid())
  tipo_certificado String
  desde            DateTime
  hasta            DateTime
  emisor           String
  Token            Token[]
}
