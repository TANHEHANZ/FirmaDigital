generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String   @db.VarChar(150)
  ci             String   @unique @db.VarChar(10) // inicio de secion por ci 
  password       String
  fecha_creacion DateTime @default(now())
  tipo_user      TypeUser
  is_active      String   @default("TRUE")
  is_deleted     String   @default("FALSE")
  isUpdate       String   @default("FALSE")
  idRol          String
  unidad         String
  institucion    String
  cargo          String
  refresh_token  String?
  rol            Rol      @relation(fields: [idRol], references: [id])
  Firmar         Firmar[]
}

enum TypeUser {
  Juridica
  Natural
}

model Token {
  id                  String      @id @default(cuid())
  tipo                String      @db.VarChar(100)
  id_token_provedor   String
  ci_titual           String      @db.VarChar(10)
  email_titular       String
  descripcion_titular String
  id_certificado      String
  Certificado         Certificado @relation(fields: [id_certificado], references: [id])
  is_active           String      @default("FALSE")
  is_deleted          String      @default("FALSE")
  isUpdate            String      @default("FALSE")
  Firmar              Firmar[]
}

model Certificado {
  id               String   @id @default(cuid())
  tipo_certificado String
  desde            DateTime
  hasta            DateTime
  emisor           String
  Token            Token[]
}

model Documento {
  id                 String          @id @default(cuid())
  nombre             String          @db.VarChar(255)
  tipo_documento     String          @db.VarChar(500)
  documento_blob     String          @db.Text
  estado             EstadoDocumento @default(Activo)
  fecha_creacion     DateTime        @default(now())
  id_historial       String? // aca podemos registrar el id al documento que se editara 
  fecha_modificacion DateTime?
  fecha_eliminacion  DateTime?
  Firmar             Firmar[]
  is_deleted         String          @default("FALSE")
  isUpdate           String          @default("FALSE")
}

enum EstadoDocumento {
  Activo
  Modificado // Datis normales modificados
  Eliminado // eliminamos de forma logica todos los registros relacionados a el documentos
  Remplazado // seria como poner una nueva version del documento 
}

model Firmar {
  id          String    @id @default(cuid())
  fecha       DateTime  @default(now())
  idUser      String
  idDocumento String
  idToken     String
  User        User      @relation(fields: [idUser], references: [id])
  Documento   Documento @relation(fields: [idDocumento], references: [id])
  Token       Token     @relation(fields: [idToken], references: [id])
}

model Rol {
  id         String @id @default(cuid())
  tipo       String @unique @db.VarChar(100)
  is_active  String @default("FALSE")
  is_deleted String @default("FALSE")
  isUpdate   String @default("FALSE")
  User       User[]
}

// model Unidad {
//   id         String @id @default(cuid())
//   unidad     String @unique @db.VarChar(100)
//   is_active  String @default("FALSE")
//   is_deleted String @default("FALSE")
//   isUpdate   String @default("FALSE")

// }
